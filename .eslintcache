[{"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\index.js":"1","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\App.js":"2","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\reportWebVitals.js":"3","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\navbar.js":"4","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\secondSection.js":"5","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\roadmap.js":"6","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\FAQs.js":"7","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\team.js":"8","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\bottomBar.js":"9","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\topSection.js":"10","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\card.js":"11","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\wallet\\connectors.js":"12"},{"size":461,"mtime":1650712666602,"results":"13","hashOfConfig":"14"},{"size":1445,"mtime":1650712666591,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1650712666604,"results":"16","hashOfConfig":"14"},{"size":9246,"mtime":1650995411739,"results":"17","hashOfConfig":"14"},{"size":5453,"mtime":1650712666600,"results":"18","hashOfConfig":"14"},{"size":5315,"mtime":1650712666599,"results":"19","hashOfConfig":"14"},{"size":4800,"mtime":1650712666598,"results":"20","hashOfConfig":"14"},{"size":3384,"mtime":1650712666600,"results":"21","hashOfConfig":"14"},{"size":2689,"mtime":1650712666598,"results":"22","hashOfConfig":"14"},{"size":17477,"mtime":1651005557052,"results":"23","hashOfConfig":"14"},{"size":1733,"mtime":1650712666599,"results":"24","hashOfConfig":"14"},{"size":161,"mtime":1650712666606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c02h6q",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\index.js",[],["54","55"],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\App.js",["56","57","58","59","60"],"import React, { Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport Web3 from \"web3\";\r\nconst Navbar = React.lazy(() => import(\"./components/navbar\"));\r\nconst TopSection = React.lazy(() => import(\"./components/topSection\"));\r\nconst SecondSection = React.lazy(() => import(\"./components/secondSection\"));\r\nconst RoadMap = React.lazy(() => import(\"./components/roadmap\"));\r\nconst Team = React.lazy(() => import(\"./components/team\"));\r\nconst FAQs = React.lazy(() => import(\"./components/FAQs\"));\r\nconst BottomBar = React.lazy(() => import(\"./components/bottomBar\"));\r\n\r\nfunction getLibrary(provider) {\r\n  return new Web3(provider);\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Suspense fallback={<div></div>}>\r\n        <Navbar />\r\n      </Suspense>\r\n      <Suspense fallback={<div></div>}>\r\n        <TopSection />\r\n        </Suspense>\r\n        {/* <Suspense fallback={<div></div>}>\r\n        <SecondSection />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <RoadMap />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <Team />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <FAQs />\r\n        </Suspense> */}\r\n        {/* <Suspense fallback={<div></div>}>\r\n        <BottomBar />\r\n        </Suspense> */}\r\n      \r\n    </Web3ReactProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\reportWebVitals.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\navbar.js",["61","62","63","64","65"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Instagram, Twitter } from \"@material-ui/icons\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { injected } from \"../wallet/connectors\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport logoRambo from \"../logo_rambo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    fontSize: 50,\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 30,\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    // fontWeight: \"bolder\",\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  navBar: {\r\n    // backgroundColor: \"#7a2048\",\r\n    backgroundColor: \"black\",\r\n    // backgroundImage: \"linear-gradient(180deg, #090c32, #000000d9)\",\r\n    // backgroundImage: `url(\"/footer.png\")`,\r\n    // backgroundRepeat: \"no-repeat\",\r\n    // backgroundSize: \"cover\",\r\n    color: \"black\",\r\n    padding: \"10px 30px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"3px 0\",\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 0,\r\n    margin: 5,\r\n    border: \"1px solid snow\",\r\n    padding: \"15px 10px\",\r\n    color: \"snow\",\r\n    background: \"none\",\r\n    \"&:hover\": {\r\n      background: \"snow\",\r\n      color: \"#090c32\",\r\n    },\r\n  },\r\n  icons: {\r\n    fontSize: 30,\r\n    margin: 10,\r\n    marginBottom: 0,\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  menuItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nfunction Navbar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [walletConnected, setWalletConnected] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { active, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    setWalletConnected(active);\r\n  }, [active]);\r\n  let web3 = new Web3(window?.web3?.currentProvider);\r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum);\r\n  } else {\r\n    web3 = new Web3(\r\n      new Web3.providers.HttpProvider(process.env.REACT_APP_PROVIDER_URL)\r\n    );\r\n  }\r\n\r\n  let chainId = process.env.REACT_APP_CHAIN_ID;\r\n\r\n  async function connect() {\r\n    try {\r\n      if (!window?.web3?.currentProvider) {\r\n        alert(`Metamask is not installed.\r\nTry Different browser or Install Metamask.`);\r\n        return;\r\n      }\r\n      let id = await web3.eth.net.getId();\r\n      if (id !== parseInt(chainId)) {\r\n        alert(\"Please change your network to Rinkbey\");\r\n        return false;\r\n      }\r\n      await activate(injected);\r\n      setWalletConnected(true);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.navBar}>\r\n      <Container maxWidth=\"lg\" style={{ padding: 0 }}>\r\n        <Toolbar>\r\n          <Typography component=\"div\" style={{ margin: \"0 10px\" }}>\r\n            <a href=\"https://cryptorambo.io/\">\r\n              <img src={logoRambo} width=\"150px\" />\r\n            </a>\r\n          </Typography>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Platinum Elite NFT\r\n          </Typography>\r\n          <Hidden only={[\"xs\", \"sm\"]}>\r\n            {/* <Typography component=\"div\">\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                {\" \"}\r\n                <Twitter\r\n                  style={{ color: \"#1e2761\" }}\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram\r\n                  style={{ color: \"#1e2761\" }}\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n            </Typography> */}\r\n            <Button\r\n              href=\"https://cryptorambo.io/\"\r\n              color=\"inherit\"\r\n              target=\"_blank\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button\r\n              href=\"https://t.me/CryptoRamboGroup\"\r\n              color=\"inherit\"\r\n              target=\"_blank\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n            >\r\n              Telegram\r\n            </Button>\r\n            {/* <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={connect}\r\n            >\r\n              {\" \"}\r\n              {walletConnected ? \"Connected\" : \"Connect Wallet\"}\r\n            </Button> */}\r\n          </Hidden>\r\n          <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon className={classes.menuButton} />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n            className={classes.menu}\r\n          >\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              {/* <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://discord.gg/nf89WZxKha\"\r\n                target=\"_blank\"\r\n              > */}\r\n              <Button\r\n                href=\"https://cryptorambo.io/\"\r\n                color=\"inherit\"\r\n                target=\"_blank\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n              >\r\n                Home\r\n              </Button>\r\n              {/* </a> */}\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                href=\"https://t.me/CryptoRamboGroup\"\r\n                target=\"_blank\"\r\n                className={classes.button}\r\n              >\r\n                Telegram\r\n              </Button>\r\n            </MenuItem>\r\n            {/* {window.ethereum ? (\r\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  style={{ color: \"#408ec6\" }}\r\n                  onClick={connect}\r\n                >\r\n                  {walletConnected ? \"Connected\" : \"Connect Wallet\"}\r\n                </Button>\r\n              </MenuItem>\r\n            ) : (\r\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  style={{ color: \"#408ec6\" }}\r\n                  href={\r\n                    \"https://metamask.app.link/dapp/catmobstaz.com/\"\r\n                  }\r\n                >\r\n                  Connect Wallet\r\n                </Button>\r\n              </MenuItem>\r\n            )} */}\r\n            {/* <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                <Twitter color=\"primary\" className={classes.icons} />\r\n              </a>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram color=\"primary\" className={classes.icons} />\r\n              </a>\r\n            </MenuItem> */}\r\n          </Menu>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Navbar;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\secondSection.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\roadmap.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\FAQs.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\team.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\bottomBar.js",["66","67","68"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Instagram, Twitter } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customGrid: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n    padding: 40,\r\n    maxHeight: 300,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundImage: `url(\"/footer.png\")`,\r\n\r\n  },\r\n  navBar: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#7a2048\",\r\n    color: \"black\",\r\n    padding: \"20px 10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"5px 5px\",\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    margin: 5,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 10,\r\n      margin: 5,\r\n    },\r\n  },\r\n  bottomText: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  logo: {\r\n    marginTop: -20,\r\n    width: \"100%\",\r\n    maxWidth: \"220px\"\r\n  },\r\n  icons: {\r\n    padding: 2,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 5,\r\n    fontSize: 30,\r\n    color: \"#7a2048\",\r\n    margin: 5\r\n  }\r\n}));\r\n\r\nfunction BottomBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    // <AppBar position=\"static\" className={classes.navBar}>\r\n      <Grid container style={{justifyContent: \"center\", marginBottom: 0}}>\r\n        <Grid item xs={11} className={classes.customGrid}>\r\n            <div style={{overflow: \"hidden\", minHeight: 180}}>\r\n            <img src=\"/new_logo.png\" className={classes.logo} />\r\n            </div>\r\n            <Typography component=\"div\">\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\",  }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                {\" \"}\r\n                <Twitter\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n            </Typography>\r\n         </Grid>\r\n      </Grid>\r\n    // </AppBar>\r\n  );\r\n}\r\n\r\nexport default BottomBar;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\topSection.js",["69","70","71","72","73","74"],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\card.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\wallet\\connectors.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":7,"nodeType":"81","messageId":"82","endLine":7,"endColumn":20},{"ruleId":"79","severity":1,"message":"83","line":8,"column":7,"nodeType":"81","messageId":"82","endLine":8,"endColumn":14},{"ruleId":"79","severity":1,"message":"84","line":9,"column":7,"nodeType":"81","messageId":"82","endLine":9,"endColumn":11},{"ruleId":"79","severity":1,"message":"85","line":10,"column":7,"nodeType":"81","messageId":"82","endLine":10,"endColumn":11},{"ruleId":"79","severity":1,"message":"86","line":11,"column":7,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"87","line":10,"column":10,"nodeType":"81","messageId":"82","endLine":10,"endColumn":19},{"ruleId":"79","severity":1,"message":"88","line":10,"column":21,"nodeType":"81","messageId":"82","endLine":10,"endColumn":28},{"ruleId":"79","severity":1,"message":"89","line":84,"column":10,"nodeType":"81","messageId":"82","endLine":84,"endColumn":25},{"ruleId":"79","severity":1,"message":"90","line":103,"column":18,"nodeType":"81","messageId":"82","endLine":103,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":135,"column":15,"nodeType":"93","endLine":135,"endColumn":52},{"ruleId":"79","severity":1,"message":"94","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"95","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":68,"column":13,"nodeType":"93","endLine":68,"endColumn":65},{"ruleId":"79","severity":1,"message":"96","line":16,"column":10,"nodeType":"81","messageId":"82","endLine":16,"endColumn":26},{"ruleId":"79","severity":1,"message":"97","line":17,"column":8,"nodeType":"81","messageId":"82","endLine":17,"endColumn":14},{"ruleId":"79","severity":1,"message":"98","line":19,"column":8,"nodeType":"81","messageId":"82","endLine":19,"endColumn":10},{"ruleId":"79","severity":1,"message":"99","line":163,"column":9,"nodeType":"81","messageId":"82","endLine":163,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":187,"column":6,"nodeType":"102","endLine":187,"endColumn":39,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":362,"column":13,"nodeType":"93","messageId":"106","endLine":365,"endColumn":14,"fix":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'SecondSection' is assigned a value but never used.","Identifier","unusedVar","'RoadMap' is assigned a value but never used.","'Team' is assigned a value but never used.","'FAQs' is assigned a value but never used.","'BottomBar' is assigned a value but never used.","'Instagram' is defined but never used.","'Twitter' is defined but never used.","'walletConnected' is assigned a value but never used.","'connect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AppBar' is defined but never used.","'Button' is defined but never used.","'ContactsOutlined' is defined but never used.","'banner' is defined but never used.","'bg' is defined but never used.","'price' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAllowance', 'getBalance', and 'getMintedToken'. Either include them or remove the dependency array.","ArrayExpression",["110"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"111","text":"112"},"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},[9721,9721]," rel=\"noreferrer\"","Update the dependencies array to be: [active, account, count, allowed, checkAllowance, getBalance, getMintedToken]",{"range":"115","text":"116"},[4780,4813],"[active, account, count, allowed, checkAllowance, getBalance, getMintedToken]"]
