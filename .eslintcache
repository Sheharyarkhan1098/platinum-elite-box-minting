[{"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\index.js":"1","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\reportWebVitals.js":"2","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\App.js":"3","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\roadmap.js":"4","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\navbar.js":"5","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\bottomBar.js":"6","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\FAQs.js":"7","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\topSection.js":"8","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\secondSection.js":"9","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\team.js":"10","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\card.js":"11","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\wallet\\connectors.js":"12"},{"size":461,"mtime":1650712666602,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1650712666604,"results":"15","hashOfConfig":"14"},{"size":1445,"mtime":1650712666591,"results":"16","hashOfConfig":"14"},{"size":5315,"mtime":1650712666599,"results":"17","hashOfConfig":"14"},{"size":9307,"mtime":1650712666599,"results":"18","hashOfConfig":"14"},{"size":2689,"mtime":1650712666598,"results":"19","hashOfConfig":"14"},{"size":4800,"mtime":1650712666598,"results":"20","hashOfConfig":"14"},{"size":16739,"mtime":1650715849484,"results":"21","hashOfConfig":"14"},{"size":5453,"mtime":1650712666600,"results":"22","hashOfConfig":"14"},{"size":3384,"mtime":1650712666600,"results":"23","hashOfConfig":"14"},{"size":1733,"mtime":1650712666599,"results":"24","hashOfConfig":"14"},{"size":161,"mtime":1650712666606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c02h6q",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\index.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\reportWebVitals.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\App.js",["54","55","56","57","58"],"import React, { Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport Web3 from \"web3\";\r\nconst Navbar = React.lazy(() => import(\"./components/navbar\"));\r\nconst TopSection = React.lazy(() => import(\"./components/topSection\"));\r\nconst SecondSection = React.lazy(() => import(\"./components/secondSection\"));\r\nconst RoadMap = React.lazy(() => import(\"./components/roadmap\"));\r\nconst Team = React.lazy(() => import(\"./components/team\"));\r\nconst FAQs = React.lazy(() => import(\"./components/FAQs\"));\r\nconst BottomBar = React.lazy(() => import(\"./components/bottomBar\"));\r\n\r\nfunction getLibrary(provider) {\r\n  return new Web3(provider);\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Suspense fallback={<div></div>}>\r\n        <Navbar />\r\n      </Suspense>\r\n      <Suspense fallback={<div></div>}>\r\n        <TopSection />\r\n        </Suspense>\r\n        {/* <Suspense fallback={<div></div>}>\r\n        <SecondSection />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <RoadMap />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <Team />\r\n        </Suspense>\r\n        <Suspense fallback={<div></div>}>\r\n        <FAQs />\r\n        </Suspense> */}\r\n        {/* <Suspense fallback={<div></div>}>\r\n        <BottomBar />\r\n        </Suspense> */}\r\n      \r\n    </Web3ReactProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\roadmap.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\navbar.js",["59","60","61","62","63"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Instagram, Twitter } from \"@material-ui/icons\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { injected } from \"../wallet/connectors\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport logoRambo from \"../logo_rambo.png\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    fontSize: 50,\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 30,\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    // fontWeight: \"bolder\",\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  navBar: {\r\n    // backgroundColor: \"#7a2048\",\r\n    backgroundColor: \"black\",\r\n    // backgroundImage: \"linear-gradient(180deg, #090c32, #000000d9)\",\r\n    // backgroundImage: `url(\"/footer.png\")`,\r\n    // backgroundRepeat: \"no-repeat\",\r\n    // backgroundSize: \"cover\",\r\n    color: \"black\",\r\n    padding: \"10px 30px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"3px 0\",\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 0,\r\n    margin: 5,\r\n    border: \"1px solid snow\",\r\n    padding: \"15px 10px\",\r\n    color: \"snow\",\r\n    background: \"none\",\r\n    \"&:hover\":{\r\n      background: \"snow\",\r\n      color: \"#090c32\",\r\n    }\r\n  },\r\n  icons: {\r\n    fontSize: 30,\r\n    margin: 10,\r\n    marginBottom: 0,\r\n    // color: \"#1e2761\",\r\n    color: \"snow\",\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \r\n  },\r\n  menuItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"black\"\r\n  },\r\n}));\r\n\r\nfunction Navbar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [walletConnected, setWalletConnected] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { active, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    setWalletConnected(active);\r\n  }, [active]);\r\n  let web3 = new Web3(window?.web3?.currentProvider);\r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum);\r\n  } else {\r\n    web3 = new Web3(\r\n      new Web3.providers.HttpProvider(process.env.REACT_APP_PROVIDER_URL)\r\n    );\r\n  }\r\n\r\n  let chainId = process.env.REACT_APP_CHAIN_ID;\r\n\r\n  async function connect() {\r\n    try {\r\n      if (!window?.web3?.currentProvider) {\r\n        alert(`Metamask is not installed.\r\nTry Different browser or Install Metamask.`);\r\n        return;\r\n      }\r\n      let id = await web3.eth.net.getId();\r\n      if (id !== parseInt(chainId)) {\r\n        alert(\"Please change your network to Rinkbey\");\r\n        return false;\r\n      }\r\n      await activate(injected);\r\n      setWalletConnected(true);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.navBar}>\r\n      <Container maxWidth=\"lg\" style={{ padding: 0 }}>\r\n        <Toolbar>\r\n          <Typography component=\"div\" style={{margin: \"0 10px\"}}>\r\n              <a href=\"https://cryptorambo.io/\" >\r\n              <img src={logoRambo} width=\"150px\" />\r\n             </a>\r\n          </Typography>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Platinum Elite Box\r\n          </Typography>\r\n          <Hidden only={[\"xs\", \"sm\"]}>\r\n            {/* <Typography component=\"div\">\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                {\" \"}\r\n                <Twitter\r\n                  style={{ color: \"#1e2761\" }}\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram\r\n                  style={{ color: \"#1e2761\" }}\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n            </Typography> */}\r\n              <Button\r\n                href=\"https://cryptorambo.io/\"\r\n                color=\"inherit\"\r\n                target=\"_blank\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n              >\r\n                Home\r\n              </Button>\r\n              <Button\r\n                href=\"https://t.me/CryptoRamboGroup\"\r\n                color=\"inherit\"\r\n                target=\"_blank\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n              >\r\n                Telegram\r\n              </Button>\r\n            {/* <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={connect}\r\n            >\r\n              {\" \"}\r\n              {walletConnected ? \"Connected\" : \"Connect Wallet\"}\r\n            </Button> */}\r\n          </Hidden>\r\n          <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon className={classes.menuButton} />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n            className={classes.menu}\r\n          >\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              {/* <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://discord.gg/nf89WZxKha\"\r\n                target=\"_blank\"\r\n              > */}\r\n                 <Button\r\n                href=\"https://cryptorambo.io/\"\r\n                color=\"inherit\"\r\n                target=\"_blank\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n              >\r\n                Home\r\n              </Button>\r\n              {/* </a> */}\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n            <Button\r\n                  color=\"inherit\"\r\n                  variant=\"outlined\"\r\n                  href=\"https://t.me/CryptoRamboGroup\"\r\n                  target=\"_blank\"\r\n                  className={classes.button}\r\n                >\r\n                  Telegram\r\n                </Button>\r\n                </MenuItem>\r\n            {/* {window.ethereum ? (\r\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  style={{ color: \"#408ec6\" }}\r\n                  onClick={connect}\r\n                >\r\n                  {walletConnected ? \"Connected\" : \"Connect Wallet\"}\r\n                </Button>\r\n              </MenuItem>\r\n            ) : (\r\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  style={{ color: \"#408ec6\" }}\r\n                  href={\r\n                    \"https://metamask.app.link/dapp/catmobstaz.com/\"\r\n                  }\r\n                >\r\n                  Connect Wallet\r\n                </Button>\r\n              </MenuItem>\r\n            )} */}\r\n            {/* <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                <Twitter color=\"primary\" className={classes.icons} />\r\n              </a>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} className={classes.menuItem}>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram color=\"primary\" className={classes.icons} />\r\n              </a>\r\n            </MenuItem> */}\r\n          </Menu>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Navbar;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\bottomBar.js",["64","65","66"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Instagram, Twitter } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customGrid: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n    padding: 40,\r\n    maxHeight: 300,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundImage: `url(\"/footer.png\")`,\r\n\r\n  },\r\n  navBar: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#7a2048\",\r\n    color: \"black\",\r\n    padding: \"20px 10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"5px 5px\",\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    margin: 5,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 10,\r\n      margin: 5,\r\n    },\r\n  },\r\n  bottomText: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  logo: {\r\n    marginTop: -20,\r\n    width: \"100%\",\r\n    maxWidth: \"220px\"\r\n  },\r\n  icons: {\r\n    padding: 2,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 5,\r\n    fontSize: 30,\r\n    color: \"#7a2048\",\r\n    margin: 5\r\n  }\r\n}));\r\n\r\nfunction BottomBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    // <AppBar position=\"static\" className={classes.navBar}>\r\n      <Grid container style={{justifyContent: \"center\", marginBottom: 0}}>\r\n        <Grid item xs={11} className={classes.customGrid}>\r\n            <div style={{overflow: \"hidden\", minHeight: 180}}>\r\n            <img src=\"/new_logo.png\" className={classes.logo} />\r\n            </div>\r\n            <Typography component=\"div\">\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\",  }}\r\n                href=\"https://twitter.com/CatMobstaz\"\r\n                target=\"_blank\"\r\n              >\r\n                {\" \"}\r\n                <Twitter\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n              <a\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"https://www.instagram.com/catmobstaz/\"\r\n                target=\"_blank\"\r\n              >\r\n                <Instagram\r\n                  color=\"primary\"\r\n                  className={classes.icons}\r\n                />\r\n              </a>\r\n            </Typography>\r\n         </Grid>\r\n      </Grid>\r\n    // </AppBar>\r\n  );\r\n}\r\n\r\nexport default BottomBar;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\FAQs.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\topSection.js",["67","68","69","70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { VideoCard } from \"material-ui-player\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { injected } from \"../wallet/connectors\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport contractAbi from \"../abi/testnetGenesisAbi.json\";\r\nimport BUSDAbi from \"../abi/BUSDAbi.json\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport banner from \"../collage.png\";\r\n// import bannerVideo from \"../PlatinumEliteNFT.mp4\";\r\nimport bg from \"../HEORE.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    borderRadius: 0,\r\n    padding: 10,\r\n    margin: \"10px\",\r\n    color: \"snow\",\r\n    border: \"1px solid snow\",\r\n    // backgroundColor: \"none\", //\"#F2DFD8\"\r\n    \"&:disabled\": {\r\n      color: \"#408ea6\",\r\n      backgroundColor: \"#040b38\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"snow\",\r\n      color: \"#1e2761\",\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"90%\",\r\n    },\r\n  },\r\n  h3: {\r\n    marginBottom: 10,\r\n    fontWeight: \"Bolder\",\r\n    color: \"#408ec6\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 30,\r\n    },\r\n  },\r\n  h4: {\r\n    marginBottom: 5,\r\n    fontWeight: \"Bolder\",\r\n    color: \"snow\",\r\n    textAlign: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 25,\r\n    },\r\n  },\r\n  subHeading: {\r\n    marginBottom: 5,\r\n    fontWeight: \"Bolder\",\r\n    color: \"snow\",\r\n    textAlign: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  instruction: {\r\n    padding: 5,\r\n    color: \"snow\",\r\n    fontSize: 18,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  mint: {\r\n    marginBottom: 5,\r\n    fontWeight: \"Bolder\",\r\n    color: \"snow\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  body2: {\r\n    marginBottom: 10,\r\n    color: \"#408ec6\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 15,\r\n    },\r\n  },\r\n  subtitle1: {\r\n    fontWeight: \"bold\",\r\n    color: \"#408ec6\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: 11,\r\n    },\r\n  },\r\n  inputCount: {\r\n    width: 100,\r\n    backgroundColor: \"white\",\r\n    // borderRadius: 8,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: 50,\r\n    },\r\n  },\r\n  decrementBtn: {\r\n    // borderTopLeftRadius: 30,\r\n    // borderBottomLeftRadius: 30,\r\n    borderRadius: 0,\r\n    // backgroundColor: \"#1e2761\",\r\n    color: \"snow\",\r\n    border: \"1px solid snow\",\r\n    padding: 7,\r\n    \"&:disabled\": {\r\n      color: \"white\",\r\n      backgroundColor: \"grey\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"snow\",\r\n      color: \"#1e2761\",\r\n    },\r\n  },\r\n  incrementBtn: {\r\n    // borderTopRightRadius: 30,\r\n    // borderBottomRightRadius: 30,\r\n    borderRadius: 0,\r\n    // backgroundColor: \"#1e2761\",\r\n    color: \"snow\",\r\n    border: \"1px solid snow\",\r\n    padding: 7,\r\n    \"&:disabled\": {\r\n      color: \"white\",\r\n      backgroundColor: \"grey\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"snow\",\r\n      color: \"#1e2761\",\r\n    },\r\n  },\r\n  imgContainer: {\r\n    maxWidth: 700,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: 10,\r\n    borderRadius: 30,\r\n    boxShadow: \"0 0 30px 0 rgba(189,191,255,0.37)\",\r\n  },\r\n}));\r\n\r\nfunction TopSection() {\r\n  const classes = useStyles();\r\n  const [count, setCount] = useState(1);\r\n  const [allowed, setAllowed] = useState(0);\r\n  const [currentBalance, setCurrentBalance] = useState(0);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const wei = 1000000000000000000;\r\n  const price = 0.25; // 0.07 -- for public sale 0.10\r\n\r\n  const { active, account, activate } = useWeb3React();\r\n\r\n  let web3 = new Web3(window?.web3?.currentProvider);\r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum);\r\n  } else {\r\n    web3 = new Web3(\r\n      new Web3.providers.HttpProvider(process.env.REACT_APP_PROVIDER_URL)\r\n    );\r\n  }\r\n  const chainId = process.env.REACT_APP_CHAIN_ID;\r\n  const ContractAddress = process.env.REACT_APP_GENESIS_CONTRACT_ADDRESS;\r\n  const BUSDContractAddress = process.env.REACT_APP_BUSD_CONTRACT;\r\n  const Contract = new web3.eth.Contract(contractAbi, ContractAddress);\r\n  const BUSDContract = new web3.eth.Contract(BUSDAbi, BUSDContractAddress);\r\n\r\n  console.log(BUSDContract, \"adasdhasd\");\r\n\r\n  useEffect(() => {\r\n    if (active) checkAllowance();\r\n    getBalance();\r\n    getMintedToken();\r\n  }, [active, account, count, allowed]);\r\n\r\n  async function checkAllowance() {\r\n    try {\r\n      let result = await BUSDContract.methods\r\n        .allowance(`${account}`, \"0xAa8586eA6713514ac97E51A60c30CB25bcd85A9E\")\r\n        .call();\r\n      console.log(result / wei);\r\n      setAllowed(result / wei);\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(JSON.stringify(err));\r\n    }\r\n  }\r\n\r\n  async function approveBUSD() {\r\n    try {\r\n      if (!window?.web3?.currentProvider) {\r\n        alert(`Metamask is not installed.\r\nTry Different browser or Install Metamask.`);\r\n        return;\r\n      }\r\n      await activate(injected);\r\n\r\n      let id = await web3.eth.net.getId();\r\n\r\n      if (id !== parseInt(chainId)) {\r\n        alert(\"Please change your network to rinkbey\");\r\n        return false;\r\n      }\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      let weiCount = count * 200 * wei;\r\n\r\n      let balance = await BUSDContract.methods.balanceOf(accounts[0]).call();\r\n\r\n      if (balance < weiCount) {\r\n        alert(\"You do not have required BUSD!\");\r\n        return;\r\n      }\r\n\r\n      let result = await BUSDContract.methods\r\n        .approve(\"0xAa8586eA6713514ac97E51A60c30CB25bcd85A9E\", `${weiCount}`)\r\n        .send({\r\n          from: accounts[0],\r\n          // value: web3.utils.toWei(`${count * price}`, \"ether\"),\r\n        });\r\n      console.log(result);\r\n      setAllowed(weiCount / wei);\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(JSON.stringify(err));\r\n    }\r\n  }\r\n\r\n  async function getBalance() {\r\n    try {\r\n      if (active) {\r\n        let balance = await Contract.methods.balanceOf(account, \"1\").call();\r\n        setCurrentBalance(balance);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(JSON.stringify(err));\r\n    }\r\n  }\r\n\r\n  async function getMintedToken() {\r\n    try {\r\n      if (active) {\r\n        let totalSupply = await Contract.methods.totalSupply().call();\r\n        console.log(totalSupply, \"djfghjdjh\");\r\n        setTotalSupply(totalSupply);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(JSON.stringify(err));\r\n    }\r\n  }\r\n\r\n  async function mint() {\r\n    try {\r\n      if (!window?.web3?.currentProvider) {\r\n        alert(`Metamask is not installed.\r\nTry Different browser or Install Metamask.`);\r\n        return;\r\n      }\r\n      await activate(injected);\r\n\r\n      let id = await web3.eth.net.getId();\r\n\r\n      if (id !== parseInt(chainId)) {\r\n        alert(\"Please change your network to rinkbey\");\r\n        return false;\r\n      }\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n      let result = await Contract.methods.mintByBusd(count).send({\r\n        from: accounts[0],\r\n        // value: web3.utils.toWei(`${count * price}`, \"ether\"),\r\n      });\r\n      checkAllowance();\r\n      console.log(result);\r\n      return \"success\";\r\n    } catch (err) {\r\n      alert(JSON.stringify(err.message));\r\n      return \"failed\";\r\n    }\r\n  }\r\n\r\n  async function connect() {\r\n    try {\r\n      if (!window?.web3?.currentProvider) {\r\n        alert(`Metamask is not installed.\r\nTry Different browser or Install Metamask.`);\r\n        return;\r\n      }\r\n      let id = await web3.eth.net.getId();\r\n      if (id !== parseInt(chainId)) {\r\n        alert(\"Please change your network to Rinkbey\");\r\n        return false;\r\n      }\r\n      await activate(injected);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n\r\n      <Grid\r\n        container\r\n        style={{\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"black\",\r\n          // backgroundImage: `url(${bg})`,\r\n          // backgroundRepeat: \"no-repeat\",\r\n          // backgroundSize: \"cover\",\r\n          // minHeight: \"100vh\",\r\n          padding: \"200px 0 50px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={5}\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Typography\r\n            component=\"div\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              maxWidth: 700,\r\n              padding: 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"h3\" className={classes.h4}>\r\n              Whitelist Mint is Now Open!\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.subHeading}>\r\n              ''Mint your Platinum Elite NFT Loot Boxes''\r\n            </Typography>\r\n            {/* <Typography variant=\"h6\" className={classes.mint}>\r\n              200 BUSD / NFT\r\n            </Typography> */}\r\n            <Typography variant=\"h6\" className={classes.instruction}>\r\n              <Typography variant=\"h5\" style={{ margin: \"5px 0\" }}>\r\n                {\" \"}\r\n                Instructions:{\" \"}\r\n              </Typography>\r\n              1. Connect your Metamask wallet. <br />\r\n              2. Select the number of NFTs you want to mint. <br />\r\n              3. Click Approve, then confirm permissions on Metamask.\r\n              <br />\r\n              &nbsp; (Wait for a few seconds until you see ''Mint Now'') <br />\r\n              4. Click on 'Mint Now'. <br />\r\n              5. Confirm the transaction on your Metamask. <br />\r\n              6. Your NFT Balance should be updated and show your owned NFTs.\r\n              <br /> &nbsp;(Give it 1-2 min and refresh page if necessary)\r\n            </Typography>\r\n            {/* <Typography variant=\"h3\" className={classes.h3}>\r\n              Cool Boys\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.body2}>\r\n              First & Only collection of 10,000 Metaverse compatible Cool Boys\r\n              NFTs that lets you travel for free, gives you access to passive\r\n              income and exclusive events such as yacht and mansion parties in\r\n              the physical and digital world. Join our Discord for updates!\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.subtitle1}>\r\n              Pre-Sale Mint: 25th February 9pm EST @ 0.07 ETH + Gas Fee\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.subtitle1}>\r\n              Public Mint: 2nd March 2pm EST @ 0.10 ETH + Gas Fee\r\n            </Typography> */}\r\n\r\n            {/* mint counter */}\r\n            <Typography variant=\"h5\" className={classes.mint}>\r\n              NFTs Minted: {totalSupply} / 2800\r\n            </Typography>\r\n            {window.ethereum ? (\r\n              <Button\r\n                color=\"inherit\"\r\n                // variant=\"contained\"\r\n                className={classes.menuButton}\r\n                style={{ marginTop: 20 }}\r\n                onClick={connect}\r\n              >\r\n                {\" \"}\r\n                {active ? \"Connected\" : \"Connect Wallet\"}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color=\"inherit\"\r\n                // variant=\"contained\"\r\n                className={classes.menuButton}\r\n                style={{ marginTop: 20 }}\r\n                href={\"https://metamask.app.link/dapp/cryptorambo.io/mint/\"}\r\n              >\r\n                {\" \"}\r\n                {active ? \"Connected\" : \"Connect Wallet\"}\r\n              </Button>\r\n            )}\r\n\r\n            <Typography component=\"div\" style={{ display: \"flex\" }}>\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                className={classes.decrementBtn}\r\n                disabled={count < 2}\r\n                onClick={() => setCount(count - 1)}\r\n              >\r\n                -\r\n              </Button>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                type=\"nubmer\"\r\n                size=\"small\"\r\n                disabled={true}\r\n                value={count}\r\n                className={classes.inputCount}\r\n              />\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                className={classes.incrementBtn}\r\n                disabled={count > 9}\r\n                onClick={() => setCount(count + 1)}\r\n              >\r\n                +\r\n              </Button>\r\n            </Typography>\r\n            <Typography component=\"div\">\r\n              {/* <Button\r\n                href=\"https://discord.gg/nf89WZxKha\"\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                className={classes.menuButton}\r\n              >\r\n                Join Discord\r\n              </Button> */}\r\n\r\n              {/* Mint button */}\r\n\r\n              {isMobile ? (\r\n                window.ethereum ? (\r\n                  !active ? (\r\n                    <Button\r\n                      color=\"inherit\"\r\n                      // variant=\"contained\"\r\n                      className={classes.menuButton}\r\n                      onClick={() => {\r\n                        allowed < count * 200 ? approveBUSD() : mint();\r\n                      }}\r\n                    >\r\n                      {allowed < count * 200 ? \"Approve\" : \"Mint Now\"}\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"inherit\"\r\n                      // variant=\"contained\"\r\n                      className={classes.menuButton}\r\n                      disabled={!count}\r\n                      onClick={() => {\r\n                        allowed < count * 200 ? approveBUSD() : mint();\r\n                      }}\r\n                    >\r\n                      {allowed < count * 200 ? \"Approve\" : \"Mint Now\"}\r\n                    </Button>\r\n                  )\r\n                ) : (\r\n                  <Button\r\n                    href=\"https://metamask.app.link/dapp/cryptorambo.io/mint/\"\r\n                    color=\"inherit\"\r\n                    // variant=\"contained\"\r\n                    className={classes.menuButton}\r\n                    disabled={!count}\r\n                  >\r\n                    {allowed < count * 200 ? \"Approve\" : \"Mint Now\"}\r\n                  </Button>\r\n                )\r\n              ) : (\r\n                // active ? <Button color=\"inherit\" variant=\"outlined\" className={classes.menuButton} disabled={!count} onClick={mint} >Mint Now</Button> :\r\n                //   <Button color=\"inherit\" variant=\"outlined\" className={classes.menuButton} onClick={connect} >Connect Wallet</Button>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  // variant=\"contained\"\r\n                  className={classes.menuButton}\r\n                  onClick={() => {\r\n                    allowed < count * 200 ? approveBUSD() : mint();\r\n                  }}\r\n                  disabled={!count}\r\n                >\r\n                  {allowed < count * 200 ? \"Approve\" : \"Mint Now\"}\r\n                </Button>\r\n              )}\r\n            </Typography>\r\n            <Typography variant=\"h5\" className={classes.mint}>\r\n              Your Balance: {currentBalance}\r\n            </Typography>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={5}\r\n          style={{\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <Typography component=\"div\" className={classes.imgContainer}>\r\n            {/* <img\r\n              className={classes.img}\r\n              src={banner}\r\n              alt={\"collage\"}\r\n              style={{ borderRadius: 30 }}\r\n            /> */}\r\n            <VideoCard src={\"/PlatinumEliteNFT.mp4\"} />\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopSection;\r\n","D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\secondSection.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\team.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\components\\card.js",[],"D:\\Project\\Smart Contract\\platinum-elite-box-minting\\src\\wallet\\connectors.js",[],{"ruleId":"72","severity":1,"message":"73","line":7,"column":7,"nodeType":"74","messageId":"75","endLine":7,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":8,"column":7,"nodeType":"74","messageId":"75","endLine":8,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":9,"column":7,"nodeType":"74","messageId":"75","endLine":9,"endColumn":11},{"ruleId":"72","severity":1,"message":"78","line":10,"column":7,"nodeType":"74","messageId":"75","endLine":10,"endColumn":11},{"ruleId":"72","severity":1,"message":"79","line":11,"column":7,"nodeType":"74","messageId":"75","endLine":11,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":19},{"ruleId":"72","severity":1,"message":"81","line":10,"column":21,"nodeType":"74","messageId":"75","endLine":10,"endColumn":28},{"ruleId":"72","severity":1,"message":"82","line":85,"column":10,"nodeType":"74","messageId":"75","endLine":85,"endColumn":25},{"ruleId":"72","severity":1,"message":"83","line":104,"column":18,"nodeType":"74","messageId":"75","endLine":104,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":136,"column":15,"nodeType":"86","endLine":136,"endColumn":52},{"ruleId":"72","severity":1,"message":"87","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"88","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":68,"column":13,"nodeType":"86","endLine":68,"endColumn":65},{"ruleId":"72","severity":1,"message":"89","line":17,"column":10,"nodeType":"74","messageId":"75","endLine":17,"endColumn":26},{"ruleId":"72","severity":1,"message":"90","line":18,"column":8,"nodeType":"74","messageId":"75","endLine":18,"endColumn":14},{"ruleId":"72","severity":1,"message":"91","line":20,"column":8,"nodeType":"74","messageId":"75","endLine":20,"endColumn":10},{"ruleId":"72","severity":1,"message":"92","line":164,"column":9,"nodeType":"74","messageId":"75","endLine":164,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":188,"column":6,"nodeType":"95","endLine":188,"endColumn":39,"suggestions":"96"},"no-unused-vars","'SecondSection' is assigned a value but never used.","Identifier","unusedVar","'RoadMap' is assigned a value but never used.","'Team' is assigned a value but never used.","'FAQs' is assigned a value but never used.","'BottomBar' is assigned a value but never used.","'Instagram' is defined but never used.","'Twitter' is defined but never used.","'walletConnected' is assigned a value but never used.","'connect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AppBar' is defined but never used.","'Button' is defined but never used.","'ContactsOutlined' is defined but never used.","'banner' is defined but never used.","'bg' is defined but never used.","'price' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAllowance', 'getBalance', and 'getMintedToken'. Either include them or remove the dependency array.","ArrayExpression",["97"],{"desc":"98","fix":"99"},"Update the dependencies array to be: [active, account, count, allowed, checkAllowance, getBalance, getMintedToken]",{"range":"100","text":"101"},[4835,4868],"[active, account, count, allowed, checkAllowance, getBalance, getMintedToken]"]